<!DOCTYPE html>
<html>
<head>
  <title>MechanicalMap</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <%= csrf_meta_tags %>
  <!--[if lt IE 9]>
  <script src="http://html5shim.googlecode.com/svn/trunk/html5.js" type="text/javascript"></script>
  <![endif]-->
  <link href="http://twitter.github.com/bootstrap/assets/css/bootstrap.css" rel="stylesheet">
  <!-- bootstrap
  <link href="http://twitter.github.com/bootstrap/assets/css/bootstrap-responsive.css" rel="stylesheet">
  -->

  <%= javascript_include_tag "application" %>
  <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=drawing"></script>
  <script src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>
  <script src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>

  <script type="text/javascript">
      var user = {id:<%= current_or_guest_user.id %>, name:"<%= current_or_guest_user.username %>"};
      var scheduler_url = "<%= workflow_app_url(@app) %>";
      var ft_table = "<%= @app.input_ft %>";
      //dynamically resize the map
      function resize_widget() {
          // calculate new size and apply it
          var max_h = $(window).height();
          var max_w = $(window).width();
          var m_h = $("#menu").height();
          if (map != null) {
              $("#map").height(max_h - m_h);
              G.event.trigger(map, "resize");
          }
          $("#about_info").width(300);
          var w = $("#about_info").width();
          var h = $("#about_info").height();
      <% if  request.user_agent =~ /Chrome/ %>
          $("#about_info").offset({ top: max_h / 2 + 100, left: max_w / 2 + 150 });
      <% else %>
          $("#about_info").offset({ top: max_h / 2 - 150, left: max_w / 2 - 150 });
      <% end %>
      }
  </script>
</head>

<body>

<!-- BEGINNING OF The UI Task TEMPLATE
================================================== -->
<!-- schema=[{name:"task_id", type:number},{name:"user_id", type:number},{name:"annotation", type:number}] -->

<div id="map" style="height: 300px"></div>
<div id="menu" style="margin: 0;padding: 0;clear: both">
  <div class="navbar" style="margin: 0;padding: 0">
    <div class="navbar-inner">
      <div class="container">
        <ul class="nav">
          <li class="">
            <form accept-charset="UTF-8" action="" id="form_task" class="edit_task navbar-form pull-left" data-remote="true" data-type="json" id="submit_task" method="put">
              <input id="task_answer" name="task_answer" type="hidden"/>
              <input class="btn btn-primary" data-disable-with="Saving..." name="commit" type="submit" value="Submit"/>
            </form>
          </li>
          <li class=""><a id='skip_task' href="#">Next area</a></li>
          <li class="divider-vertical"></li>
          <li class="navbar-search">
            <div class="progress navbar-search" style="width:50px;height: 10px">
              <div class="bar" id="progress_bar" style="width: 10%;color:black;font-size: smaller;padding: 0;margin: 0">20/300</div>
            </div>
          </li>
          <li class="divider-vertical"></li>
          <li class="">
            <a href="#" id="about_button">Instructions</a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
<div class="modal hide" id="about_info">
  <div class="modal-body">
    <h4>Annotating buildings</h4>

    <p>Your mission is to click on all the buildings/areas that look <b>salient or atypic</b> in the
      delimited aera.
      <a href="<%= app_url(@app) %>">More information and data access.</a>
    </p>

    <div style="text-align: center">
      <a href="#" class="btn btn-primary" data-dismiss="modal">Start</a>
    </div>
    <hr/>
    <div style="font-size: smaller">This is a micro-tasking demo project generated by the 'mechanical map' framework.
      Create or remix micro-task templates to build on the fly your own crowdmapping project.
    </div>
  </div>
</div>

<!-- javascript
================================================== -->
<script type="text/javascript">
    // Global variables

    var G = google.maps;
    var area;
    var map;
    var markers = [];
    var micro_task;
    /*
     Initialize the user interface
     */
    function init_ui() {
        /** MAP **/
        map = new G.Map(document.getElementById("map"), {
            zoom: 3,
            center: new G.LatLng(70, 0),
            mapTypeId: G.MapTypeId.SATELLITE,
            panControl: false,
            zoomControl: true,
            scaleControl: false,
            streetViewControl: false,
            overviewMapControl: false
        });

        /** drawing manager **/
        var drawingManager = new G.drawing.DrawingManager({
            drawingMode: G.drawing.OverlayType.MARKER,
            drawingControl: true,
            drawingControlOptions: {
                position: G.ControlPosition.TOP_CENTER,
                drawingModes: [G.drawing.OverlayType.MARKER]
            },
            markerOptions: {zIndex:1,draggable:true}
        });
        drawingManager.setMap(map);

        G.event.addListener(drawingManager, 'markercomplete', function(marker) {
            // outside the area
            if (!area.getBounds().contains(marker.position)) {
                marker.setMap(null);
            } else {
                // we remove the marker if we click on it
                G.event.addListener(marker, 'click', function() {
                    markers = jQuery.grep(markers, function(value) {
                        return value != marker;
                    });
                    marker.setMap(null);
                });
                markers.push(marker);
            }
        });

        $("#about_button").click(function(event) {
            event.preventDefault();
            $("#about_info").modal({backdrop:false});
        });
        $("#about_info").modal({backdrop:false});

        // bind resize map function to the resize event for the window
        resize_widget();
        $(window).resize(resize_widget);
    }


    $(function() {

        // initializing the UI
        init_ui();

        // initializing the task manager
        // we have to manage the loading and saving of a task
        micro_task = new FTMicroTask({
            scheduler_url:scheduler_url,
            ft_table:ft_table,
            load:function(ft_data) {
                console.log(ft_data);
                // cleaning map
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers.length = 0;
                if (area != null) {
                    area.setMap(null);
                }

                // parse info to create a google map polygon
                var poly_js = ft_data.table.rows[0][2];
                area = new GeoJSON(poly_js);
                area.setOptions({strokeColor:"#FF0000",strokeWeight:"2", fillOpacity:0});
                area.setMap(map);

                // center the map to the polygon
                var bounds = area.getBounds();
                map.fitBounds(bounds);
            },

            /*
             Function called just before submitting data.
             Saving the rows to the fusion google table.
             The json format should reflect the structure of the (google fusion) table
             */
            save:function() {
                var rows = [];
                for (var i = 0; i < markers.length; i++) {
                    rows.push({
                        user_id :user.id,
                        task_id: micro_task.task.input,
                        annotation: markers[i].position.lat() + " " + markers[i].position.lng()});
                }
                // no annotation
                if (rows.length == 0)
                        rows.push({ user_id:user.id,task_id: micro_task.input,annotation: " "});
                console.log(rows);
                $("#task_answer").val(JSON.stringify(rows));
            }
        });

        micro_task.start();
    });
</script>

<!--END  UI Task TEMPLATE
================================================== -->

</body>
</html>